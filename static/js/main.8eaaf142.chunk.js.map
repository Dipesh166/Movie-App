{"version":3,"sources":["components/moviecard.js","App.js","reportWebVitals.js","index.js"],"names":["Moviecard","_ref","movie","selectMovie","react_default","a","createElement","className","onClick","poster_path","src","concat","alt","title","App","Api_Url","_useState","useState","_useState2","Object","slicedToArray","movies","setMovies","_useState3","_useState4","searchKey","setsearchKey","_useState5","_useState6","setselectMovie","_useState7","_useState8","playTrailer","setplayTrailer","fetchmovies","asyncToGenerator","regenerator_default","mark","_callee","type","_yield$axios$get","results","wrap","_context","prev","next","axios","get","params","api_key","query","sent","data","selectmovie","stop","_x","apply","this","arguments","fetchMovie","_ref2","_callee2","id","_yield$axios$get2","_context2","append_to_response","abrupt","_x2","_ref3","_callee3","_context3","_x3","useEffect","onSubmit","e","preventDefault","onChange","target","value","style","backgroundImage","backdrop_path","videos","trailer","find","name","key","Fragment","index_esm","videoId","containerClassName","opts","width","height","playerVars","autoplay","controls","renderTrailer","button","map","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8eaaf142.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\nexport default function Moviecard({movie,selectMovie}) {\r\n  const IMAGE_PATH=\"https://image.tmdb.org/t/p/w200/\"\r\n  \r\n  return (\r\n      <div className={\"movie-card\"} onClick={() => selectMovie(movie)}>\r\n        {\r\n          movie.poster_path ? <img  src={`${IMAGE_PATH}${movie.poster_path}`} alt=''/>\r\n          :\r\n          <div className='movie-placeholder'> NO Image Found </div>\r\n        }\r\n       <h5> {movie.title}</h5>\r\n      </div>\r\n  )\r\n}\r\n","//import logo from './logo.svg';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport React from 'react';\nimport Moviecard from './components/moviecard';\nimport YouTube from 'react-youtube';\n\n\n\n\nfunction App() {\n  const IMAGE_PATH = \"https://image.tmdb.org/t/p/w1280/\"\n  const Api_Url = \"https://api.themoviedb.org/3\"\n  const [movies, setMovies] = useState([])\n  const [searchKey, setsearchKey] = useState(\"\")\n  const [selectMovie, setselectMovie] = useState({})\n  const[playTrailer, setplayTrailer] = useState(false)\n\n\n  const fetchmovies = async (searchKey) => {\n    const type = searchKey ? \"search\" : \"discover\"\n    const { data: { results } } = await axios.get(`${Api_Url}/${type}/movie`, {\n      params: {\n        api_key: \"6a5ed49569633067fb5619f757adcd98\",\n        query: searchKey\n      }\n\n\n\n    })\n    \n    setMovies(results)\n    await selectmovie(results[0])\n\n\n  }\n\n  \nconst fetchMovie = async (id) => {\n  const {data} = await axios.get( `${Api_Url}/movie/${id}`, {\n    params: {\n      api_key: \"6a5ed49569633067fb5619f757adcd98\",\n      append_to_response:'videos'\n    }\n\n  })\n  return data\n}\n\nconst selectmovie  = async (movie ) => {\n  setplayTrailer(false)\n  const data = await  fetchMovie(movie.id)\n  \n  setselectMovie(data)\n\n}\n\n\n  \n\n\n\n\n\n\n\n\n\n  useEffect(() => {\n    fetchmovies();\n\n  }, [])\n\n  const renderMovie = () => (\n    movies.map(movie => (\n\n      <>\n        <Moviecard key={movie.id}\n          movie={movie}\n          selectMovie={selectmovie} />\n      </>\n    ))\n\n\n  )\n\n  const searchMovies = (e) => {\n    e.preventDefault()\n    fetchmovies(searchKey);\n\n  }\n\n  \n  const renderTrailer = () => {\n    const trailer =selectMovie.videos.results.find(videos => videos.name === 'Official Trailer')\n    const key= trailer ? trailer.key : selectMovie.videos.results[1].key\n\n    return (\n      <>\n      <YouTube \n      videoId={key}\n      containerClassName={\"youtube-container\"}\n      opts={{\n        width:\"100%\",\n        height:\"100%\",\n        playerVars:{\n          autoplay:1,\n          controls:0\n        }\n      }\n\n      }\n      />\n      </>\n    )\n  }\n\n\n\n  return (\n    <div className=\"Apm\">\n\n      <header className={'header'}>\n        <div className={'header-content max-center'}>\n          <span>Latest Movie Trailer</span>\n\n          <form onSubmit={searchMovies}>\n            <input type=\"text\" onChange={(e) => setsearchKey(e.target.value)} />\n            <button type={\"submit\"}>Search</button>\n          </form>\n        </div>\n      </header >\n\n      <div className='hero' style={{ backgroundImage: `url('${IMAGE_PATH}${selectMovie.backdrop_path}')` }}>\n        <div className='hero-content max-center' >\n          { playTrailer ?<button className='button button--close' onClick={() => setplayTrailer(false)}>Close</button> : null}\n          {selectMovie.videos && playTrailer ? renderTrailer() : null}\n          \n\n\n          <button button className='hero-button' onClick={() => setplayTrailer(true)}>Play Video</button>\n          <h1 className='hero-title'>{selectMovie.title}</h1>\n          \n        </div>\n\n      </div>\n\n      <div className=\"Appp max-center\">\n\n        {renderMovie()}\n      </div>\n\n    </div >\n\n\n\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}